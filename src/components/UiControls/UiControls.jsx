// src/components/UiControls/UiControls.jsx
import React, { useState } from 'react';
import styles from './UiControls.module.css';
import { useNavigate } from 'react-router-dom';
import { useThemeMode } from '../../hooks/useThemeMode';
import { useThemeZoom } from '../../hooks/useThemeZoom';
import PomodoroTimer from './PomodoroTimer'; // V√âGLEGES JAV√çT√ÅS: Helyes √∫tvonal ugyanabban a mapp√°ban

const UiControls = () => {
  const navigate = useNavigate();
  const { theme, toggleTheme } = useThemeMode();
  const { zoom, dec, inc } = useThemeZoom();
  const [isPomodoroVisible, setIsPomodoroVisible] = useState(false);

  return (
    <>
      <div className={styles.wrapper} aria-label="Felhaszn√°l√≥i vez√©rl≈ëk">
        {/* 0) F≈ëoldal gomb */}
        <div className={styles.group}>
          <button
            type="button"
            onClick={() => navigate('/')}
            className={styles.homeBtn}
            aria-label="Vissza a f≈ëoldalra"
            title="Vissza a f≈ëoldalra"
          >
            üè†
          </button>
        </div>

        {/* 1) T√©ma v√°lt√≥ */}
        <div className={styles.group}>
          <button
            type="button"
            onClick={toggleTheme}
            className={styles.pill}
            aria-label={theme === 'dark' ? 'S√∂t√©t m√≥d' : 'Vil√°gos m√≥d'}
            title={theme === 'dark' ? 'S√∂t√©t m√≥d' : 'Vil√°gos m√≥d'}
          >
            <span className={styles.icon}>
              {theme === 'dark' ? 'üåô' : 'üåû'}
            </span>
            <span className={styles.label}>
              {theme === 'dark' ? 'S√∂t√©t m√≥d' : 'Vil√°gos m√≥d'}
            </span>
          </button>
        </div>

        {/* 2) Nagy√≠t√°s */}
        <div className={styles.group} aria-label="Nagy√≠t√°s vez√©rl≈ë">
          <button type="button" onClick={dec} className={styles.roundBtn} title="Kicsiny√≠t√©s">‚àí</button>
          <div className={styles.pillSmall}>{zoom}%</div>
          <button type="button" onClick={inc} className={styles.roundBtn} title="Nagy√≠t√°s">+</button>
        </div>

        {/* 3) Pomodoro Timer Gomb */}
        <div className={styles.group}>
          <button
            type="button"
            onClick={() => setIsPomodoroVisible(v => !v)}
            className={`${styles.homeBtn} ${isPomodoroVisible ? styles.activeBtn : ''}`}
            aria-label="F√≥kusz id≈ëz√≠t≈ë megjelen√≠t√©se/elrejt√©se"
            title="F√≥kusz id≈ëz√≠t≈ë"
          >
            ‚è±Ô∏è
          </button>
        </div>
        
        <div className={styles.spacer} />
      </div>

      {isPomodoroVisible && <PomodoroTimer />}
    </>
  );
};

export default UiControls;