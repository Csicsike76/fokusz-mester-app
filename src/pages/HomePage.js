import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import Hero from '../components/Hero/Hero';
import styles from './HomePage.module.css';
import { useAuth } from '../context/AuthContext';

const API_URL = process.env.REACT_APP_API_URL || '';

const homePageLayout = {
  freeLessons: {
    matematika: [
      { slug: 'kviz-muveletek-tortekkel', grade: '5. Oszt√°ly', titleOverride: 'T√∂rtek √©s Tizedest√∂rtek' },
      { slug: 'kviz-aranyok', grade: '6. Oszt√°ly', titleOverride: 'Sz√°zal√©ksz√°m√≠t√°s' },
      { slug: 'kviz-termeszetes-negyzetgyok', grade: '7. Oszt√°ly', titleOverride: 'Term√©szetes sz√°mok n√©gyzet√©nek n√©gyzetgy√∂ke' },
      { slug: 'kviz-halmazok-meghataroza', grade: '8. Oszt√°ly', titleOverride: 'Halmazok meghat√°roz√°sa elemeik k√∂z√∂s tulajdons√°g√°val' }
    ],
    fizika: [
      { slug: 'kviz-halmazallapot-valtozasok', grade: '6. Oszt√°ly', titleOverride: 'Halmaz√°llapot-v√°ltoz√°sok' },
      { slug: 'kviz-fizikai-mennyisegek-es-jelensegek', grade: '7. Oszt√°ly', titleOverride: 'A fizik√°ban haszn√°lt matematikai elj√°r√°sok √©s modellek' },
      { slug: 'kviz-elektromossag-alapjai', grade: '8. Oszt√°ly', titleOverride: 'Elektromoss√°g alapjai' }
    ],
    'mesterseges intelligencia': [
      { slug: 'muhely-kepalkotas', titleOverride: 'K√©palkot√°s MI-vel', description: 'V√°ltoztasd a szavakat leny≈±g√∂z≈ë k√©pekk√©! Pr√≥b√°ld ki az els≈ë kreat√≠v m≈±helyt!' },
      { slug: 'muhely-jatektervezes', titleOverride: 'J√°t√©ktervez√©s 101', description: 'Tervezd meg a saj√°t vide√≥j√°t√©kod koncepci√≥j√°t az √∂tlett≈ël a karakterig az MI-vel!' },
      { slug: 'muhely-prompt-alapok', titleOverride: 'A Promptol√°s Alapjai', description: 'Tanulj meg hat√©konyan ‚Äûbesz√©lgetni‚Äù az MI-vel, √©s √≠rj egy r√∂vid t√∂rt√©netet k√∂z√∂sen!' }
    ]
  },
  freeTools: [
    { slug: 'idoutazo-csevego', titleOverride: 'Id≈ëutaz√≥ Cseveg≈ë', description: 'Besz√©lgess Newtonnal a gravit√°ci√≥r√≥l vagy Turinggal a k√≥dfejt√©sr≈ël.' },
    { slug: 'jovokutato-szimulator', titleOverride: 'J√∂v≈ëkutat√≥ Szimul√°tor', description: 'K√©rdezz a holnapr√≥l egy MI-szak√©rt≈ët≈ël! Milyen lesz az √©let a Marson?' },
    { slug: 'celkituzo', titleOverride: 'Szem√©lyes C√©lkit≈±z≈ë', description: 'Bontsd le a nagy √°lmaidat apr√≥, el√©rhet≈ë l√©p√©sekre az MI seg√≠ts√©g√©vel.' },
    { slug: 'iranytu', titleOverride: 'Tud√°s Ir√°nyt≈±', description: 'Elakadt√°l? √çrd le a probl√©m√°d, √©s az MI √∫tvonalat javasol a Tud√°st√°rb√≥l.' }
  ],
  premiumCourses: [
    { slug: 'interaktav-matematika-gyljtemany', titleOverride: 'Teljes Matematika Kurzus', description: 'Hozz√°f√©r√©s az √∂sszes √©vfolyam (5-8.) minden interakt√≠v leck√©j√©hez √©s k√©pletgy≈±jtem√©ny√©hez.' },
    { slug: 'interaktav-fizika-gyljtemany', titleOverride: 'Teljes Fizika Kurzus', description: 'Hozz√°f√©r√©s az √∂sszes √©vfolyam (6-8.) minden interakt√≠v leck√©j√©hez √©s k√©pletgy≈±jtem√©ny√©hez.' },
    { slug: 'interaktav-aimi1-gyljtemany', titleOverride: 'Teljes Interakt√≠v Mesters√©ges Intelligencia', description: 'Hozz√°f√©r√©s az √∂sszes halad√≥ m≈±helyhez, a projekt k√©zik√∂nyvh√∂z √©s az extra tartalmakhoz.' }
  ],
  premiumTools: [
    { slug: 'kepletgyujtemeny', titleOverride: 'Interakt√≠v K√©plet- √©s T√©telt√°r', description: 'Egy teljes, interakt√≠v tud√°sb√°zis matekb√≥l √©s fizik√°b√≥l, r√©szletes magyar√°zatokkal, p√©ld√°kkal √©s be√©p√≠tett MI-seg√≠ts√©ggel.' },
    { slug: 'napi_kihivas', titleOverride: 'A Napi Kih√≠v√°s', description: 'Egy gyors, napi logikai vagy matematikai agytorna, hogy a gondolkod√°sod mindig √©les maradjon.' },
    { slug: 'tutor', titleOverride: 'CSICSIKE Tutor', description: 'A Tutor nem adja meg a k√©sz v√°laszt, hanem r√°vezet≈ë k√©rd√©sekkel seg√≠t meg√©rteni a megold√°st.' },
    { slug: 'hazi_hos', titleOverride: 'H√°zifeladat H≈ës', description: 'Illeszd be a feladatodat, √©s az MI l√©p√©sr≈ël-l√©p√©sre v√©gigvezet a gondolkod√°son.' },
    { slug: 'vita-arena', titleOverride: 'AI Vita Ar√©na', description: 'N√©zd meg, hogyan vit√°znak a g√©pek! Elemezd k√©t, ellent√©tes n√©z≈ëpont√∫ MI √©rvel√©s√©t.' },
    { slug: 'vizsga-szimulator', titleOverride: 'AI Vizsga Szimul√°tor', description: 'Gener√°lj v√©gtelen sz√°m√∫, egyedi pr√≥bafeladatsort a t√©maz√°r√≥idra!' },
    { slug: 'konkretizalo', titleOverride: 'Absztrakt->Konkr√©t Ford√≠t√≥', description: 'Bonyolult fogalmat magyar√°z el h√©tk√∂znapi anal√≥gi√°val.' },
    { slug: 'essze-vazlatolo', titleOverride: 'Essz√© V√°zlatol√≥', description: 'Seg√≠t egy fogalmaz√°s vagy essz√© logikus szerkezet√©nek fel√©p√≠t√©s√©ben.' }
  ]
};

const HomePage = () => {
  const [allCurriculumsMap, setAllCurriculumsMap] = useState(new Map());
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  const { canUsePremium } = useAuth();

  useEffect(() => {
    const fetchAllCurriculums = async () => {
      try {
        const response = await fetch(`${API_URL}/api/curriculums`);
        const data = await response.json();
        if (!data.success) throw new Error('Hiba az adatok bet√∂lt√©sekor.');
        const curriculumMap = new Map();
        const allContent = data.data;
        const processItems = (items) => {
          if (Array.isArray(items)) {
            items.forEach(item => item && item.slug && curriculumMap.set(item.slug, item));
          }
        };
        processItems(allContent.freeTools);
        processItems(allContent.premiumCourses);
        processItems(allContent.premiumTools);
        if (typeof allContent.freeLessons === 'object' && allContent.freeLessons !== null) {
          Object.values(allContent.freeLessons).forEach(subjectArray => processItems(subjectArray));
        }
        setAllCurriculumsMap(curriculumMap);
      } catch (err) {
        setError(err.message);
      } finally {
        setIsLoading(false);
      }
    };
    fetchAllCurriculums();
  }, []);

  const renderCard = (itemConfig, typeClass) => {
    const dynamicData = allCurriculumsMap.get(itemConfig.slug);
    if (!dynamicData) return null;

    const isPremium = typeClass.startsWith('premium');
    const userHasAccess = canUsePremium;
    
    const title = itemConfig.titleOverride || dynamicData.title;
    const description = itemConfig.description || dynamicData.description;
    
    const linkTarget = (isPremium && !userHasAccess) ? '/bejelentkezes' : `/tananyag/${itemConfig.slug.replace(/_/g, '-')}`;

    const buttonTextMap = {
      freeLesson: 'Ingyenes Lecke ‚Üí',
      freeTool: 'Eszk√∂z Ind√≠t√°sa ‚Üí',
      premiumCourse: 'R√©szletek ‚Üí',
      premiumTool: 'Ind√≠t√°s ‚Üí'
    };
    
    return (
      <div key={itemConfig.slug} className={`${styles.card} ${styles[typeClass]}`}>
        <h4>
          {isPremium && !userHasAccess && <span className={styles.lockIcon}>üîí </span>}
          {itemConfig.grade ? `${itemConfig.grade} - ` : ''}{title}
        </h4>
        {description && <p>{description}</p>}
        <Link to={linkTarget} className={`${styles.btn} ${styles[typeClass + 'Btn']}`}>
          {buttonTextMap[typeClass] || 'Tov√°bb ‚Üí'}
        </Link>
      </div>
    );
  };

  return (
    <div>
      <Hero
        title="T√∂bb, Mint Iskola: Felk√©sz√ºl√©s a Holnapra."
        subtitle="Mi√©rt √©ri meg a gyereknek m√°r most Mesters√©ges Intelligenci√°t tanulnia?"
        buttonText="Tudj meg t√∂bbet ‚Üì"
        scrollToId="miert-fontos"
      />

      <main className={styles.mainContent}>
        <section id="miert-fontos" className={styles.section}>
          <div className={styles.featureGrid}>
            <div className={styles.featureCard}>
              <h3>Gondolkod√°s, Nem Magol√°s</h3>
              <p>Az MI-tananyagok probl√©mamegold√≥ gondolkod√°st tan√≠tanak, ahelyett, hogy csak adatokat memoriz√°ln√°nak.</p>
            </div>
            <div className={styles.featureCard}>
              <h3>A J√∂v≈ë Kompetenci√°ja</h3>
              <p>Az MI hamarosan alapvet≈ë k√©szs√©g lesz. Aki most megismeri, behozhatatlan el≈ënyre tesz szert a j√∂v≈ë munkaer≈ëpiac√°n.</p>
            </div>
            <div className={styles.featureCard}>
              <h3>Kreativit√°s a Gyakorlatban</h3>
              <p>A tanul√°s n√°lunk azonnali, k√©zzelfoghat√≥ alkot√°ss√° v√°lik, legyen az k√©palkot√°s vagy j√°t√©ktervez√©s.</p>
            </div>
          </div>
        </section>

        <section className={`${styles.section} ${styles.interactiveSection}`}>
          <h2 className={styles.sectionTitle}>Tervezd meg a J√∂v≈ë Iskol√°j√°t!</h2>
          <p className={styles.interactiveSubtitle}>Milyen AI-eszk√∂zt tal√°ln√°l ki, ha te tervezn√©d az iskol√°dat?</p>
          <div className={styles.interactiveCta}>
            <p>Egy virtu√°lis t√∂rt√©n√©sz? Egy essz√©-v√°zlatol√≥? N√°lunk ezek m√°r nem a j√∂v≈ë. N√©zd meg, mire k√©pes az MI m√°r ma!</p>
          </div>
        </section>

        {isLoading ? (
          <p style={{ textAlign: 'center', padding: '2rem' }}>Tartalom bet√∂lt√©se...</p>
        ) : error ? (
          <p style={{ textAlign: 'center', color: 'red', padding: '2rem' }}>Hiba: {error}</p>
        ) : (
          <>
            <section id="ingyenes-leckek" className={styles.section}>
              <h2 className={styles.sectionTitle}>Pr√≥b√°ld ki Ingyen!</h2>
              {Object.keys(homePageLayout.freeLessons).map(subject => {
                const subjectClassName = subject.replace(/\s+/g, '-').toLowerCase();
                return (
                  <div key={subject}>
                    <h3 className={`${styles.subjectTitle} ${styles[subjectClassName] || ''}`}>{subject}</h3>
                    <div className={styles.cardGrid}>
                      {homePageLayout.freeLessons[subject].map(itemConfig => renderCard(itemConfig, 'freeLesson'))}
                    </div>
                  </div>
                );
              })}
            </section>
            <section id="ingyenes-eszkozok" className={styles.section}>
              <h2 className={styles.sectionTitle}>Ingyenes Interakt√≠v Eszk√∂z√∂k</h2>
              <div className={styles.cardGrid}>
                {homePageLayout.freeTools.map(itemConfig => renderCard(itemConfig, 'freeTool'))}
              </div>
            </section>
            <section id="premium-kurzusok" className={styles.section}>
              <h2 className={styles.sectionTitle}>Teljes Kurzusok (Pr√©mium)</h2>
              <div className={styles.cardGrid}>
                {homePageLayout.premiumCourses.map(itemConfig => renderCard(itemConfig, 'premiumCourse'))}
              </div>
            </section>
            <section id="premium-eszkozok" className={styles.section}>
              <h2 className={styles.sectionTitle}>Exkluz√≠v Pr√©mium Eszk√∂z√∂k</h2>
              <div className={styles.cardGrid}>
                {homePageLayout.premiumTools.map(itemConfig => renderCard(itemConfig, 'premiumTool'))}
              </div>
            </section>
          </>
        )}
      </main>
    </div>
  );
};

export default HomePage;